from faker import Faker
import json
import csv
import argparse

# Инициализация Faker
fake = Faker()

# Функция для генерации случайных данных
def generate_data(records=10, locale='en', output_format='json'):
    Faker.seed(42)  # Фиксируем сид для воспроизводимости
    fake = Faker(locale)
    data = []
    
    for _ in range(records):
        data.append({
            "name": fake.name(),
            "address": fake.address(),
            "email": fake.email(),
            "phone": fake.phone_number(),
            "birthdate": fake.date_of_birth(minimum_age=18, maximum_age=80).isoformat(),
            "company": fake.company()
        })
    
    if output_format == 'json':
        return json.dumps(data, indent=4)
    elif output_format == 'csv':
        csv_data = "name,address,email,phone,birthdate,company\n"
        for row in data:
            csv_data += f"{row['name']},{row['address']},{row['email']},{row['phone']},{row['birthdate']},{row['company']}\n"
        return csv_data
    else:
        raise ValueError("Unsupported output format. Use 'json' or 'csv'.")

# Функция для сохранения в файл
def save_to_file(data, filename):
    with open(filename, 'w', encoding='utf-8') as f:
        f.write(data)

# Обработка аргументов командной строки
if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Random Data Generator")
    parser.add_argument("-n", "--num", type=int, default=10, help="Number of records to generate")
    parser.add_argument("-l", "--locale", type=str, default="en", help="Locale for data generation (e.g., en, ru, fr)")
    parser.add_argument("-f", "--format", type=str, default="json", choices=["json", "csv"], help="Output format")
    parser.add_argument("-o", "--output", type=str, default="output.json", help="Output file name")
    
    args = parser.parse_args()
    generated_data = generate_data(args.num, args.locale, args.format)
    save_to_file(generated_data, args.output)
    print(f"Data successfully generated and saved to {args.output}")
